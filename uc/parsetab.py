
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftORleftANDleftLTGTLEleftPLUSMINUSleftTIMESDIVIDEleftMODAND ASSERT BREAK CHAR CHAR_CONST COMMA DIVIDE ELSE EQ EQUALS FOR GE GT ID IF INT INT_CONST LBRACE LBRACKET LE LPAREN LT MINUS MOD NE NOT OR PLUS PRINT RBRACE RBRACKET READ RETURN RPAREN SEMI STRING_LITERAL TIMES VOID WHILE program  : global_declaration_listglobal_declaration_list : global_declaration\n        | global_declaration_list global_declaration\n        global_declaration    : declarationglobal_declaration    : function_definitionfunction_definition : type_specifier declarator compound_statementtype_specifier : VOID \n        | CHAR \n        | INT\n        declarator : ID \n        | LPAREN declarator RPAREN\n        | declarator LBRACKET constant_expression RBRACKET\n         declarator : declarator LBRACKET RBRACKET \n        | declarator LPAREN parameter_list RPAREN\n         declarator : declarator LPAREN RPAREN\n         constant_expression : binary_expression binary_expression : unary_expression\n        | binary_expression TIMES binary_expression\n        | binary_expression DIVIDE binary_expression\n        | binary_expression MOD binary_expression\n        | binary_expression PLUS binary_expression\n        | binary_expression MINUS binary_expression\n        | binary_expression  LT   binary_expression\n        | binary_expression  LE  binary_expression\n        | binary_expression  GT   binary_expression\n        | binary_expression  GE  binary_expression\n        | binary_expression  EQ  binary_expression\n        | binary_expression  NE  binary_expression\n        | binary_expression  AND  binary_expression\n        | binary_expression  OR  binary_expression\n         unary_expression : postfix_expression\n        | unary_operator unary_expression postfix_expression : primary_expression \n        | postfix_expression LPAREN RPAREN\n        | postfix_expression LBRACKET expression RBRACKET\n         postfix_expression : postfix_expression LPAREN argument_expression RPAREN primary_expression : ID \n        | LPAREN expression RPAREN\n         primary_expression : constant\n         constant : INT_CONST\n         constant : CHAR_CONST\n         constant : STRING_LITERAL expression  : assignment_expression\n        | expression COMMA assignment_expression\n         argument_expression : assignment_expression\n        | argument_expression COMMA assignment_expression\n         assignment_expression : binary_expression\n        | unary_expression EQUALS assignment_expression\n         unary_operator : PLUS\n        | MINUS\n        | NOT\n         parameter_list : parameter_declaration\n        | parameter_list COMMA parameter_declaration\n         parameter_declaration : type_specifier declarator\n         declaration : type_specifier SEMI\n        | type_specifier init_declarator_list SEMI\n         init_declarator_list : init_declarator\n        | init_declarator_list COMMA init_declarator init_declarator : declarator\n        | declarator EQUALS initializer\n         initializer : assignment_expression \n        | LBRACE initializer_list RBRACE\n        | LBRACE initializer_list COMMA RBRACE\n         initializer : LBRACE RBRACE initializer_list : initializer\n        | initializer_list COMMA initializer compound_statement : LBRACE RBRACE\n        | LBRACE declaration_list RBRACE\n        | LBRACE declaration_list statement_list RBRACE\n         compound_statement : LBRACE statement_list RBRACE\n         declaration_list : declaration\n        |  declaration_list declaration\n         statement_list : statement\n        | statement_list statement \n         statement : expression_statement\n        | compound_statement\n        | selection_statement\n        | iteration_statement\n        | jump_statement\n        | assert_statement\n        | print_statement\n        | read_statement\n         expression_statement : SEMI\n        | expression SEMI\n         selection_statement : IF LPAREN expression RPAREN statement\n        | IF LPAREN expression RPAREN statement ELSE statement\n         iteration_statement : WHILE LPAREN expression RPAREN statement\n        | FOR LPAREN SEMI SEMI RPAREN statement\n        | FOR LPAREN SEMI SEMI expression RPAREN statement\n        | FOR LPAREN SEMI expression SEMI expression RPAREN statement\n        | FOR LPAREN expression SEMI expression SEMI expression RPAREN statement\n         iteration_statement : FOR LPAREN SEMI expression SEMI RPAREN statement\n        | FOR LPAREN expression SEMI SEMI expression RPAREN statement\n        | FOR LPAREN declaration SEMI RPAREN statement\n         iteration_statement : FOR LPAREN expression SEMI SEMI RPAREN statement\n        | FOR LPAREN expression SEMI expression SEMI RPAREN statement\n         iteration_statement : FOR LPAREN declaration SEMI expression RPAREN statement\n        | FOR LPAREN declaration expression SEMI expression RPAREN statement\n         iteration_statement : FOR LPAREN declaration expression SEMI RPAREN statement\n         jump_statement : BREAK SEMI\n        | RETURN expression SEMI\n         jump_statement : RETURN SEMI\n         assert_statement : ASSERT expression SEMI\n         print_statement : PRINT LPAREN RPAREN SEMI\n        | PRINT LPAREN expression RPAREN SEMI\n         read_statement : READ LPAREN argument_expression RPAREN SEMI\n        '
    
_lr_action_items = {'VOID':([0,2,3,4,5,10,11,17,19,21,23,52,53,55,97,103,105,106,112,141,],[7,7,-2,-4,-5,-3,-55,-56,-6,7,7,-67,7,-71,7,-68,-72,-70,7,-69,]),'CHAR':([0,2,3,4,5,10,11,17,19,21,23,52,53,55,97,103,105,106,112,141,],[8,8,-2,-4,-5,-3,-55,-56,-6,8,8,-67,8,-71,8,-68,-72,-70,8,-69,]),'INT':([0,2,3,4,5,10,11,17,19,21,23,52,53,55,97,103,105,106,112,141,],[9,9,-2,-4,-5,-3,-55,-56,-6,9,9,-67,9,-71,9,-68,-72,-70,9,-69,]),'$end':([1,2,3,4,5,10,11,17,19,52,103,106,141,],[0,-1,-2,-4,-5,-3,-55,-56,-6,-67,-68,-70,-69,]),'SEMI':([6,7,8,9,11,12,13,14,15,17,23,25,26,28,30,33,35,38,39,40,41,42,44,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,71,72,76,77,78,94,96,100,103,104,105,106,107,108,112,113,114,115,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,138,140,141,142,145,146,147,148,149,150,153,155,156,158,159,161,162,164,165,166,167,169,170,171,174,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[11,-7,-8,-9,-55,17,-59,-57,-10,-56,58,-58,-59,-13,-17,-31,-33,-37,-39,-40,-41,-42,-15,-60,-61,-47,-17,-67,58,58,-71,-73,11,-83,-75,-76,-77,-78,-79,-80,-81,-82,108,113,115,-43,-11,-12,-32,-14,-64,-68,58,-72,-70,-74,-84,145,-100,148,-102,149,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-34,-38,-62,-48,-69,-44,160,162,163,-101,-103,165,-36,-35,-63,58,58,173,175,178,-104,179,180,-85,-87,58,186,58,-105,-106,58,-88,58,58,58,-94,58,58,-86,-89,58,-92,58,58,-95,-97,58,-99,-90,58,-96,-93,-98,-91,]),'ID':([6,7,8,9,11,16,17,18,20,22,23,31,32,34,36,37,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,139,141,145,147,148,149,154,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[15,-7,-8,-9,-55,15,-56,15,38,38,38,-49,-50,38,38,-51,15,38,-67,38,38,-71,-73,15,-83,-75,-76,-77,-78,-79,-80,-81,-82,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-68,38,-72,-70,-74,-84,38,38,38,38,-100,-102,38,38,38,-69,38,38,-101,-103,38,38,38,38,38,38,-104,-85,-87,38,38,38,38,38,-105,-106,38,-88,38,38,38,38,-94,38,38,-86,-89,38,-92,38,38,-95,-97,38,-99,-90,38,-96,-93,-98,-91,]),'LPAREN':([6,7,8,9,11,13,15,16,17,18,20,22,23,24,26,28,31,32,33,34,35,36,37,38,39,40,41,42,44,46,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,98,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,132,136,139,141,145,147,148,149,153,154,155,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[16,-7,-8,-9,-55,21,-10,16,-56,16,36,36,36,21,21,-13,-49,-50,92,36,-33,36,-51,-37,-39,-40,-41,-42,-15,16,36,-67,36,36,-71,-73,16,-83,-75,-76,-77,-78,-79,-80,-81,-82,110,111,112,36,36,117,118,-11,-12,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-14,21,36,-68,36,-72,-70,-74,-84,36,36,36,36,-100,-102,36,36,-34,-38,36,-69,36,36,-101,-103,-36,36,-35,36,36,36,36,36,-104,-85,-87,36,36,36,36,36,-105,-106,36,-88,36,36,36,36,-94,36,36,-86,-89,36,-92,36,36,-95,-97,36,-99,-90,36,-96,-93,-98,-91,]),'RBRACE':([11,17,23,30,33,35,38,39,40,41,42,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,94,99,100,101,103,104,105,106,107,108,113,115,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,138,139,140,141,148,149,153,155,156,157,165,169,170,179,180,182,189,193,194,196,200,201,203,204,206,207,208,209,],[-55,-56,52,-17,-31,-33,-37,-39,-40,-41,-42,-61,100,-47,-17,-67,103,106,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-32,138,-64,-65,-68,141,-72,-70,-74,-84,-100,-102,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-34,-38,-62,156,-48,-69,-101,-103,-36,-35,-63,-66,-104,-85,-87,-105,-106,-88,-94,-86,-89,-92,-95,-97,-99,-90,-96,-93,-98,-91,]),'LBRACE':([11,13,15,17,22,23,28,44,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,77,78,96,103,104,105,106,107,108,113,115,139,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,23,-10,-56,49,23,-13,-15,49,-67,23,23,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-11,-12,-14,-68,23,-72,-70,-74,-84,-100,-102,49,-69,-101,-103,23,23,-104,-85,-87,23,23,-105,-106,23,-88,23,23,23,-94,23,23,-86,-89,23,-92,23,23,-95,-97,23,-99,-90,23,-96,-93,-98,-91,]),'IF':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,68,-67,68,68,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,68,-72,-70,-74,-84,-100,-102,-69,-101,-103,68,68,-104,-85,-87,68,68,-105,-106,68,-88,68,68,68,-94,68,68,-86,-89,68,-92,68,68,-95,-97,68,-99,-90,68,-96,-93,-98,-91,]),'WHILE':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,69,-67,69,69,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,69,-72,-70,-74,-84,-100,-102,-69,-101,-103,69,69,-104,-85,-87,69,69,-105,-106,69,-88,69,69,69,-94,69,69,-86,-89,69,-92,69,69,-95,-97,69,-99,-90,69,-96,-93,-98,-91,]),'FOR':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,70,-67,70,70,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,70,-72,-70,-74,-84,-100,-102,-69,-101,-103,70,70,-104,-85,-87,70,70,-105,-106,70,-88,70,70,70,-94,70,70,-86,-89,70,-92,70,70,-95,-97,70,-99,-90,70,-96,-93,-98,-91,]),'BREAK':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,71,-67,71,71,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,71,-72,-70,-74,-84,-100,-102,-69,-101,-103,71,71,-104,-85,-87,71,71,-105,-106,71,-88,71,71,71,-94,71,71,-86,-89,71,-92,71,71,-95,-97,71,-99,-90,71,-96,-93,-98,-91,]),'RETURN':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,72,-67,72,72,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,72,-72,-70,-74,-84,-100,-102,-69,-101,-103,72,72,-104,-85,-87,72,72,-105,-106,72,-88,72,72,72,-94,72,72,-86,-89,72,-92,72,72,-95,-97,72,-99,-90,72,-96,-93,-98,-91,]),'ASSERT':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,73,-67,73,73,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,73,-72,-70,-74,-84,-100,-102,-69,-101,-103,73,73,-104,-85,-87,73,73,-105,-106,73,-88,73,73,73,-94,73,73,-86,-89,73,-92,73,73,-95,-97,73,-99,-90,73,-96,-93,-98,-91,]),'PRINT':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,74,-67,74,74,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,74,-72,-70,-74,-84,-100,-102,-69,-101,-103,74,74,-104,-85,-87,74,74,-105,-106,74,-88,74,74,74,-94,74,74,-86,-89,74,-92,74,74,-95,-97,74,-99,-90,74,-96,-93,-98,-91,]),'READ':([11,17,23,52,53,54,55,56,58,59,60,61,62,63,64,65,66,103,104,105,106,107,108,113,115,141,148,149,158,159,165,169,170,171,176,179,180,181,182,183,185,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,75,-67,75,75,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,75,-72,-70,-74,-84,-100,-102,-69,-101,-103,75,75,-104,-85,-87,75,75,-105,-106,75,-88,75,75,75,-94,75,75,-86,-89,75,-92,75,75,-95,-97,75,-99,-90,75,-96,-93,-98,-91,]),'PLUS':([11,17,20,22,23,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,139,141,145,147,148,149,153,154,155,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,31,31,31,82,-17,-49,-50,-31,31,-33,31,-51,-37,-39,-40,-41,-42,31,82,-17,-67,31,31,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-32,31,-68,31,-72,-70,-74,-84,31,31,31,31,-100,-102,31,31,-18,-19,-20,-21,-22,82,82,82,82,82,82,82,82,-34,-38,31,-69,31,31,-101,-103,-36,31,-35,31,31,31,31,31,-104,-85,-87,31,31,31,31,31,-105,-106,31,-88,31,31,31,31,-94,31,31,-86,-89,31,-92,31,31,-95,-97,31,-99,-90,31,-96,-93,-98,-91,]),'MINUS':([11,17,20,22,23,29,30,31,32,33,34,35,36,37,38,39,40,41,42,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,139,141,145,147,148,149,153,154,155,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,32,32,32,83,-17,-49,-50,-31,32,-33,32,-51,-37,-39,-40,-41,-42,32,83,-17,-67,32,32,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-32,32,-68,32,-72,-70,-74,-84,32,32,32,32,-100,-102,32,32,-18,-19,-20,-21,-22,83,83,83,83,83,83,83,83,-34,-38,32,-69,32,32,-101,-103,-36,32,-35,32,32,32,32,32,-104,-85,-87,32,32,32,32,32,-105,-106,32,-88,32,32,32,32,-94,32,32,-86,-89,32,-92,32,32,-95,-97,32,-99,-90,32,-96,-93,-98,-91,]),'NOT':([11,17,20,22,23,31,32,34,36,37,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,139,141,145,147,148,149,154,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,37,37,37,-49,-50,37,37,-51,37,-67,37,37,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-68,37,-72,-70,-74,-84,37,37,37,37,-100,-102,37,37,37,-69,37,37,-101,-103,37,37,37,37,37,37,-104,-85,-87,37,37,37,37,37,-105,-106,37,-88,37,37,37,37,-94,37,37,-86,-89,37,-92,37,37,-95,-97,37,-99,-90,37,-96,-93,-98,-91,]),'INT_CONST':([11,17,20,22,23,31,32,34,36,37,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,139,141,145,147,148,149,154,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,40,40,40,-49,-50,40,40,-51,40,-67,40,40,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-68,40,-72,-70,-74,-84,40,40,40,40,-100,-102,40,40,40,-69,40,40,-101,-103,40,40,40,40,40,40,-104,-85,-87,40,40,40,40,40,-105,-106,40,-88,40,40,40,40,-94,40,40,-86,-89,40,-92,40,40,-95,-97,40,-99,-90,40,-96,-93,-98,-91,]),'CHAR_CONST':([11,17,20,22,23,31,32,34,36,37,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,139,141,145,147,148,149,154,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,41,41,41,-49,-50,41,41,-51,41,-67,41,41,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-68,41,-72,-70,-74,-84,41,41,41,41,-100,-102,41,41,41,-69,41,41,-101,-103,41,41,41,41,41,41,-104,-85,-87,41,41,41,41,41,-105,-106,41,-88,41,41,41,41,-94,41,41,-86,-89,41,-92,41,41,-95,-97,41,-99,-90,41,-96,-93,-98,-91,]),'STRING_LITERAL':([11,17,20,22,23,31,32,34,36,37,49,52,53,54,55,56,58,59,60,61,62,63,64,65,66,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,110,111,112,113,115,117,118,139,141,145,147,148,149,154,158,159,160,162,163,165,169,170,171,173,175,176,178,179,180,181,182,183,185,186,188,189,190,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,],[-55,-56,42,42,42,-49,-50,42,42,-51,42,-67,42,42,-71,-73,-83,-75,-76,-77,-78,-79,-80,-81,-82,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-68,42,-72,-70,-74,-84,42,42,42,42,-100,-102,42,42,42,-69,42,42,-101,-103,42,42,42,42,42,42,-104,-85,-87,42,42,42,42,42,-105,-106,42,-88,42,42,42,42,-94,42,42,-86,-89,42,-92,42,42,-95,-97,42,-99,-90,42,-96,-93,-98,-91,]),'COMMA':([12,13,14,15,25,26,28,30,33,35,38,39,40,41,42,43,44,45,47,48,50,51,67,76,77,78,94,95,96,98,99,100,101,114,116,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,143,144,146,151,152,153,155,156,157,161,164,168,172,174,177,184,187,191,197,],[18,-59,-57,-10,-58,-59,-13,-17,-31,-33,-37,-39,-40,-41,-42,97,-15,-52,-60,-61,-47,-17,109,-43,-11,-12,-32,109,-14,-54,139,-64,-65,109,109,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-34,154,-45,109,-38,-53,-62,-48,-44,109,109,109,109,154,-36,-35,-63,-66,109,109,-46,109,109,109,109,109,109,109,]),'LBRACKET':([13,15,24,26,28,33,35,38,39,40,41,42,44,77,78,96,98,132,136,153,155,],[20,-10,20,20,-13,93,-33,-37,-39,-40,-41,-42,-15,-11,-12,-14,20,-34,-38,-36,-35,]),'EQUALS':([13,15,26,28,33,35,38,39,40,41,42,44,51,77,78,94,96,132,136,153,155,],[22,-10,22,-13,-31,-33,-37,-39,-40,-41,-42,-15,102,-11,-12,-32,-14,-34,-38,-36,-35,]),'RPAREN':([15,21,24,28,30,33,35,38,39,40,41,42,43,44,45,50,51,76,77,78,92,94,95,96,98,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,142,143,144,151,152,153,155,160,163,168,172,173,175,177,178,184,186,187,191,197,],[-10,44,77,-13,-17,-31,-33,-37,-39,-40,-41,-42,96,-15,-52,-47,-17,-43,-11,-12,132,-32,136,-14,-54,150,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-34,153,-45,-38,-53,-48,-44,158,159,166,167,-36,-35,171,176,-46,183,185,188,190,192,195,198,199,202,205,]),'RBRACKET':([20,27,29,30,33,35,38,39,40,41,42,50,51,76,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,135,136,140,142,153,155,],[28,78,-16,-17,-31,-33,-37,-39,-40,-41,-42,-47,-17,-43,-32,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-34,155,-38,-48,-44,-36,-35,]),'TIMES':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[79,-17,-31,-33,-37,-39,-40,-41,-42,79,-17,-32,-18,-19,-20,79,79,79,79,79,79,79,79,79,79,-34,-38,-36,-35,]),'DIVIDE':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[80,-17,-31,-33,-37,-39,-40,-41,-42,80,-17,-32,-18,-19,-20,80,80,80,80,80,80,80,80,80,80,-34,-38,-36,-35,]),'MOD':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[81,-17,-31,-33,-37,-39,-40,-41,-42,81,-17,-32,81,81,-20,81,81,81,81,81,81,81,81,81,81,-34,-38,-36,-35,]),'LT':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[84,-17,-31,-33,-37,-39,-40,-41,-42,84,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,84,84,84,84,84,-34,-38,-36,-35,]),'LE':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[85,-17,-31,-33,-37,-39,-40,-41,-42,85,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,85,85,85,85,85,-34,-38,-36,-35,]),'GT':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[86,-17,-31,-33,-37,-39,-40,-41,-42,86,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,86,86,86,86,86,-34,-38,-36,-35,]),'GE':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[87,-17,-31,-33,-37,-39,-40,-41,-42,87,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,87,87,87,-29,-30,-34,-38,-36,-35,]),'EQ':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[88,-17,-31,-33,-37,-39,-40,-41,-42,88,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,88,88,88,-29,-30,-34,-38,-36,-35,]),'NE':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[89,-17,-31,-33,-37,-39,-40,-41,-42,89,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,89,89,89,-29,-30,-34,-38,-36,-35,]),'AND':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[90,-17,-31,-33,-37,-39,-40,-41,-42,90,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,90,90,90,-29,90,-34,-38,-36,-35,]),'OR':([29,30,33,35,38,39,40,41,42,50,51,94,119,120,121,122,123,124,125,126,127,128,129,130,131,132,136,153,155,],[91,-17,-31,-33,-37,-39,-40,-41,-42,91,-17,-32,-18,-19,-20,-21,-22,-23,-24,-25,91,91,91,-29,-30,-34,-38,-36,-35,]),'ELSE':([52,58,59,60,61,62,63,64,65,66,103,106,108,113,115,141,148,149,165,169,170,179,180,182,189,193,194,196,200,201,203,204,206,207,208,209,],[-67,-83,-75,-76,-77,-78,-79,-80,-81,-82,-68,-70,-84,-100,-102,-69,-101,-103,-104,181,-87,-105,-106,-88,-94,-86,-89,-92,-95,-97,-99,-90,-96,-93,-98,-91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration_list':([0,],[2,]),'global_declaration':([0,2,],[3,10,]),'declaration':([0,2,23,53,112,],[4,4,55,105,147,]),'function_definition':([0,2,],[5,5,]),'type_specifier':([0,2,21,23,53,97,112,],[6,6,46,57,57,46,57,]),'init_declarator_list':([6,57,],[12,12,]),'declarator':([6,16,18,46,57,],[13,24,26,98,26,]),'init_declarator':([6,18,57,],[14,25,14,]),'compound_statement':([13,23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[19,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'constant_expression':([20,],[27,]),'binary_expression':([20,22,23,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[29,50,50,50,50,50,50,50,50,119,120,121,122,123,124,125,126,127,128,129,130,131,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'unary_expression':([20,22,23,34,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[30,51,51,94,51,51,51,51,51,51,30,30,30,30,30,30,30,30,30,30,30,30,30,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'postfix_expression':([20,22,23,34,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'unary_operator':([20,22,23,34,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'primary_expression':([20,22,23,34,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'constant':([20,22,23,34,36,49,53,54,72,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'parameter_list':([21,],[43,]),'parameter_declaration':([21,97,],[45,137,]),'initializer':([22,49,139,],[47,101,157,]),'assignment_expression':([22,23,36,49,53,54,72,73,92,93,102,104,109,110,111,112,117,118,139,145,147,154,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[48,76,76,48,76,76,76,76,134,76,140,76,142,76,76,76,76,134,48,76,76,168,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'declaration_list':([23,],[53,]),'statement_list':([23,53,],[54,104,]),'statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[56,56,107,107,169,170,182,189,193,194,196,200,201,203,204,206,207,208,209,]),'expression_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'selection_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'iteration_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'jump_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'assert_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'print_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'read_statement':([23,53,54,104,158,159,171,176,181,183,185,188,190,192,195,198,199,202,205,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'expression':([23,36,53,54,72,73,93,104,110,111,112,117,145,147,158,159,160,162,163,171,173,175,176,178,181,183,185,186,188,190,192,195,198,199,202,205,],[67,95,67,67,114,116,135,67,143,144,146,151,161,164,67,67,172,174,177,67,184,187,67,191,67,67,67,197,67,67,67,67,67,67,67,67,]),'initializer_list':([49,],[99,]),'argument_expression':([92,118,],[133,152,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration_list','program',1,'p_program','uc_parser.py',107),
  ('global_declaration_list -> global_declaration','global_declaration_list',1,'p_global_declaration_list','uc_parser.py',111),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','uc_parser.py',112),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaration_1','uc_parser.py',117),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaration_2','uc_parser.py',121),
  ('function_definition -> type_specifier declarator compound_statement','function_definition',3,'p_function_definition','uc_parser.py',125),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser.py',138),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser.py',139),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser.py',140),
  ('declarator -> ID','declarator',1,'p_declarator','uc_parser.py',147),
  ('declarator -> LPAREN declarator RPAREN','declarator',3,'p_declarator','uc_parser.py',148),
  ('declarator -> declarator LBRACKET constant_expression RBRACKET','declarator',4,'p_declarator','uc_parser.py',149),
  ('declarator -> declarator LBRACKET RBRACKET','declarator',3,'p_declarator2','uc_parser.py',163),
  ('declarator -> declarator LPAREN parameter_list RPAREN','declarator',4,'p_declarator2','uc_parser.py',164),
  ('declarator -> declarator LPAREN RPAREN','declarator',3,'p_declarator3','uc_parser.py',174),
  ('constant_expression -> binary_expression','constant_expression',1,'p_constant_expression','uc_parser.py',180),
  ('binary_expression -> unary_expression','binary_expression',1,'p_binary_expression','uc_parser.py',184),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',185),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',186),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',187),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',188),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',189),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',190),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',191),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',192),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',193),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',194),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',195),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',196),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','uc_parser.py',197),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','uc_parser.py',205),
  ('unary_expression -> unary_operator unary_expression','unary_expression',2,'p_unary_expression','uc_parser.py',206),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','uc_parser.py',213),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','uc_parser.py',214),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','uc_parser.py',215),
  ('postfix_expression -> postfix_expression LPAREN argument_expression RPAREN','postfix_expression',4,'p_postfix_expression2','uc_parser.py',226),
  ('primary_expression -> ID','primary_expression',1,'p_primary_expression','uc_parser.py',230),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','uc_parser.py',231),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression2','uc_parser.py',239),
  ('constant -> INT_CONST','constant',1,'p_constant','uc_parser.py',244),
  ('constant -> CHAR_CONST','constant',1,'p_constant2','uc_parser.py',249),
  ('constant -> STRING_LITERAL','constant',1,'p_constant3','uc_parser.py',254),
  ('expression -> assignment_expression','expression',1,'p_expression','uc_parser.py',258),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','uc_parser.py',259),
  ('argument_expression -> assignment_expression','argument_expression',1,'p_argument_expression','uc_parser.py',272),
  ('argument_expression -> argument_expression COMMA assignment_expression','argument_expression',3,'p_argument_expression','uc_parser.py',273),
  ('assignment_expression -> binary_expression','assignment_expression',1,'p_assignment_expression','uc_parser.py',284),
  ('assignment_expression -> unary_expression EQUALS assignment_expression','assignment_expression',3,'p_assignment_expression','uc_parser.py',285),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser.py',295),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','uc_parser.py',296),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser.py',297),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','uc_parser.py',302),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','uc_parser.py',303),
  ('parameter_declaration -> type_specifier declarator','parameter_declaration',2,'p_parameter_declaration','uc_parser.py',315),
  ('declaration -> type_specifier SEMI','declaration',2,'p_declaration','uc_parser.py',322),
  ('declaration -> type_specifier init_declarator_list SEMI','declaration',3,'p_declaration','uc_parser.py',323),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','uc_parser.py',345),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','uc_parser.py',346),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','uc_parser.py',354),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','uc_parser.py',355),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','uc_parser.py',364),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','uc_parser.py',365),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','uc_parser.py',366),
  ('initializer -> LBRACE RBRACE','initializer',2,'p_initializer_2','uc_parser.py',376),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','uc_parser.py',381),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','uc_parser.py',382),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','uc_parser.py',391),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement','uc_parser.py',392),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','uc_parser.py',393),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement2','uc_parser.py',411),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','uc_parser.py',416),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','uc_parser.py',417),
  ('statement_list -> statement','statement_list',1,'p_statement_list','uc_parser.py',428),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','uc_parser.py',429),
  ('statement -> expression_statement','statement',1,'p_statement','uc_parser.py',440),
  ('statement -> compound_statement','statement',1,'p_statement','uc_parser.py',441),
  ('statement -> selection_statement','statement',1,'p_statement','uc_parser.py',442),
  ('statement -> iteration_statement','statement',1,'p_statement','uc_parser.py',443),
  ('statement -> jump_statement','statement',1,'p_statement','uc_parser.py',444),
  ('statement -> assert_statement','statement',1,'p_statement','uc_parser.py',445),
  ('statement -> print_statement','statement',1,'p_statement','uc_parser.py',446),
  ('statement -> read_statement','statement',1,'p_statement','uc_parser.py',447),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','uc_parser.py',452),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','uc_parser.py',453),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','uc_parser.py',461),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','uc_parser.py',462),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','uc_parser.py',471),
  ('iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser.py',472),
  ('iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser.py',473),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser.py',474),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement','iteration_statement',9,'p_iteration_statement','uc_parser.py',475),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement','iteration_statement',7,'p_interation_statement2','uc_parser.py',489),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement','iteration_statement',8,'p_interation_statement2','uc_parser.py',490),
  ('iteration_statement -> FOR LPAREN declaration SEMI RPAREN statement','iteration_statement',6,'p_interation_statement2','uc_parser.py',491),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement3','uc_parser.py',501),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement','iteration_statement',8,'p_iteration_statement3','uc_parser.py',502),
  ('iteration_statement -> FOR LPAREN declaration SEMI expression RPAREN statement','iteration_statement',7,'p_interation_statement4','uc_parser.py',510),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI expression RPAREN statement','iteration_statement',8,'p_interation_statement4','uc_parser.py',511),
  ('iteration_statement -> FOR LPAREN declaration expression SEMI RPAREN statement','iteration_statement',7,'p_interation_statement5','uc_parser.py',519),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement','uc_parser.py',526),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement','uc_parser.py',527),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement2','uc_parser.py',535),
  ('assert_statement -> ASSERT expression SEMI','assert_statement',3,'p_assert_statement','uc_parser.py',540),
  ('print_statement -> PRINT LPAREN RPAREN SEMI','print_statement',4,'p_print_statement','uc_parser.py',546),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMI','print_statement',5,'p_print_statement','uc_parser.py',547),
  ('read_statement -> READ LPAREN argument_expression RPAREN SEMI','read_statement',5,'p_read_statement','uc_parser.py',555),
]
